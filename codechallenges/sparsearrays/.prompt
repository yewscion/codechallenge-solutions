Sparse Arrays

There is a collection of input strings and a collection of query strings. For
each query string, determine how many times it occurs in the list of input
strings. Return an array of the results.

Example

strings = ['ab', 'ab', 'abc']
queries = ['ab', 'abc', 'bc']

There are 2 instances of 'ab', 1 of 'abc', and 0 of 'bc'. For each query, add
an element to the return array:

results = [2, 1, 0]

Function Description

Complete the function 'matchingStrings' in the editor below. The function
must return an array of integers representing the frequency of occurrence of
each 'query' string in 'strings'.


matchingStrings has the following parameters:

STRINGS <<array> of <strings>> - an array of strings to search
QUERIES <<array> of <strings>> - an array of query strings

Returns

An <<array> of <integers>> representing the number of matches for each query.


Input Format

The first line contains an <integer> n, the size of STRINGS.

Each of the next n lines contains a <string> for STRINGS[n-1].

The next line contains an <integer> q, the size of QUERIES.

Each of the next q lines contains a <string> for QUERIES[q-1].

Constraints

1 ≤ n ≤ 1000
1 ≤ q ≤ 1000
1 ≤ STRINGS[i].length ∨ QUERIES[i].length ≤ 20

Example 0
---

Input
===
4
aba
baba
aba
xzxb
3
aba
xzxb
ab

Output
===
2
1
0

Example 1
---

Input
===
3
def
de
fgh
3
de
lmn
fgh

Output
===
1
0
1

Example 2
---

Input
===
13
abcde
sdaklfj
asdjf
na
basdn
sdaklfj
asdjf
na
basdn
sdaklfj
asdjf
asdjf
na
5
abcde
sdaklfj
asdjf
na
basdn

Output
===
1
3
4
3
2
