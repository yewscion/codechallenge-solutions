#+title: The =codechallenge-solutions= README
#+subtitle: A personal repo of Code Challenges and Solutions for them.
#+date: <2022-06-13 Mon 17:54>
#+description:
#+keywords:
#+subauthor:
#+html_doctype: html5
#+html_container: div
#+html_link_home:
#+html_link_up:
#+html_mathjax:
#+html_equation_reference_format: \eqref{%s}
#+html_head:
#+html_head_extra:
#+infojs_opt:
#+creator: Emacs and Org Mode on Guix
#+latex_header:
#+texinfo_filename:
#+texinfo_class: info
#+texinfo_header:
#+texinfo_post_header:
#+texinfo_dir_category:
#+texinfo_dir_title:
#+texinfo_dir_desc:
#+texinfo_printed_title:
#+man_class:
#+man_class_options:
#+man_header:
#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:nil todo:nil |:t
#+options: html-preamble:nil html-scripts:nil html-style:nil
#+options: html-link-use-abs-url:nil html-postamble:nil
#+options: html5-fancy:nil tex:t
#+author: Christopher Rodriguez
#+email: yewscion@gmail.com
#+language: en
#+select_tags: export yup
#+exclude_tags: noexport nope
#+property: header-args :mkdirp yes :results output verbatim
#+property: header-args:text :eval never
#+property: header-args:markdown :eval never
#+property: header-args:fundamental :eval never
#+property: header-args:lisp :noweb yes :mkdirp yes
#+property: header-args:scheme :noweb yes :mkdirp yes :session GUILE
#+property: header-args:dot :cmd sfdp :mkdirp yes
#+property: header-args:bash :dir ~ :shebang #!/usr/bin/env -S bash -i
#+macro: lastupdate (eval (format-time-string "%F (W%V) %T %Z" nil t))
#+macro: summary Code Challenges and Solutions I've Created for Them.
#+macro: guixinfo (eval (cdr:readme-guix-instructions "codechallenges"))
#+macro: srcinfo (eval (cdr:readme-src-instructions "codechallenges"))
#+macro: installinfo (eval (cdr:readme-install-instructions "codechallenges"))
#+macro: useinfo (eval (cdr:readme-std-usage-instructions "codechallenges"))
#+macro: contribinfo (eval (cdr:readme-contrib-instructions "codechallenges"))
#+macro: licenseinfo (eval (cdr:readme-license-instructions "codechallenges" "agpl"))
** {{{TITLE}}}

*{{{summary}}}*

/Last Updated: {{{lastupdate}}}/

# This is where the long description goes.
This Repo is a collection of the code challenges I've completed over time, and
the solutions I've come up with for them. It's nothing serious, mostly just
something for me to look at and smile. For a list of the challenges I've
amassed, see the =Challenges.md= file!

{{{installinfo}}}
{{{useinfo}}}
# This is where specific usage instructions go.
This is mostly a toy repo, though it /is/ a package that is installable. If I
create any tools, they'll be documented in the documentation.

{{{contribinfo}}}
{{{licenseinfo}}}

All work that is not my own is not licensed under the above, and is instead
licensed under the original license of that work (mostly the prompts for the
challenges, which are in =.prompt= files and comments.

# Local Variables:
# mode: org
# coding: utf-8-unix
# End:
